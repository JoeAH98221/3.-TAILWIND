/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --radius-sm: 0.25rem;
    --radius-lg: 0.5rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-azul-claro: #37bcf9;
    --color-azul-oscuro: #0370b9;
    --animate-spin-low: spin 2s linear infinite;
    --animate-from-below: fromBelow 500ms linear;
    --animate-from-right: fromRigth 300ms linear;
    --animate-bg-banner: backBanner 10s linear;
    --animate-text-banner: showBannerText 10s linear;
    --animate-show-card-icon: showCardIcon 300ms linear;
    --animate-show-card-category: showCardCategory 400ms linear;
    --animate-show-card-description: showCardDescription 400ms linear;
    --background-image-banner: url('../img/bakbaner.png');
    --background-position-banner: -200px -200px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .float-left {
    float: left;
  }
  .float-right {
    float: right;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-5 {
    margin: calc(var(--spacing) * 5);
  }
  .m-7 {
    margin: calc(var(--spacing) * 7);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .mr-10 {
    margin-right: calc(var(--spacing) * 10);
  }
  .mr-16 {
    margin-right: calc(var(--spacing) * 16);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-11 {
    margin-left: calc(var(--spacing) * 11);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-28 {
    height: calc(var(--spacing) * 28);
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-full {
    width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .animate-bg-banner {
    animation: var(--animate-bg-banner);
  }
  .animate-spin-low {
    animation: var(--animate-spin-low);
  }
  .animate-text-banner {
    animation: var(--animate-text-banner);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .rounded-b-sm {
    border-bottom-right-radius: var(--radius-sm);
    border-bottom-left-radius: var(--radius-sm);
  }
  .border-8 {
    border-style: var(--tw-border-style);
    border-width: 8px;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-azul-claro {
    background-color: var(--color-azul-claro);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-\[url\(\'\.\.\/img\/pattern\.png\'\)\] {
    background-image: url('../img/pattern.png');
  }
  .bg-banner {
    background-image: var(--background-image-banner);
  }
  .bg-scroll {
    background-attachment: scroll;
  }
  .bg-\[position\:var\(--background-position-banner\)\] {
    background-position: var(--background-position-banner);
  }
  .pt-0\.5 {
    padding-top: calc(var(--spacing) * 0.5);
  }
  .pb-0\.5 {
    padding-bottom: calc(var(--spacing) * 0.5);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .text-white {
    color: var(--color-white);
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-header3D {
    --tw-shadow: 0px 1px 0px var(--tw-shadow-color, #393d3f), 1px 2px 0px var(--tw-shadow-color, #393d3f), 2px 3px 0px var(--tw-shadow-color, #393d3f), 3px 4px 0px var(--tw-shadow-color, #393d3f);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .group-hover\:animate-from-below {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-from-below);
      }
    }
  }
  .group-hover\:animate-from-right {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-from-right);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .max-md\:mx-auto {
    @media (width < 48rem) {
      margin-inline: auto;
    }
  }
  .max-md\:mt-8 {
    @media (width < 48rem) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .max-md\:mr-0 {
    @media (width < 48rem) {
      margin-right: calc(var(--spacing) * 0);
    }
  }
  .max-md\:h-36 {
    @media (width < 48rem) {
      height: calc(var(--spacing) * 36);
    }
  }
  .max-md\:flex-col {
    @media (width < 48rem) {
      flex-direction: column;
    }
  }
  .max-md\:text-center {
    @media (width < 48rem) {
      text-align: center;
    }
  }
  .max-md\:text-2xl {
    @media (width < 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
}
@layer base {
  @font-face {
    font-family: "TrebuchetMS";
    src: url('fonts/TrebuchetMS.ttf');
    font-weight: normal;
    font-style: normal;
  }
  @font-face {
    font-family: "BebasNeue";
    src: url('fonts/BebasNeue.otf');
    font-weight: normal;
    font-style: normal;
  }
  @font-face {
    font-family: "WebSymbolsRegular";
    src: url('fonts/websymbols-regular-webfont.eot');
    src: url('fonts/websymbols-regular-webfont.eot?#iefix') format('embedded-opentype'), url('fonts/websymbols-regular-webfont.woff') format('woff'), url('fonts/websymbols-regular-webfont.ttf') format('truetype'), url('fonts/websymbols-regular-webfont.svg#WebSymbolsRegular') format('svg');
    font-weight: normal;
    font-style: normal;
  }
  .symbol {
    font-family: "WebSymbolsRegular";
  }
  .bebas {
    font-family: "BebasNeue";
  }
  .trebuchet {
    font-family: "TrebuchetMS";
  }
}
@layer components {
  .menu-item {
    margin-right: calc(var(--spacing) * 5);
    margin-left: calc(var(--spacing) * 5);
    flex: none;
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
    @media (width < 48rem) {
      flex: 1;
    }
  }
  .menu-item-a {
    display: block;
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 125%;
        --tw-scale-y: 125%;
        --tw-scale-z: 125%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-azul-claro);
      }
    }
  }
  .card {
    margin: calc(var(--spacing) * 5);
    margin-top: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 80);
    flex: 1;
    cursor: pointer;
    overflow: hidden;
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-color: var(--color-gray-200);
    background-color: var(--color-white);
    padding-right: calc(var(--spacing) * 5);
    padding-left: calc(var(--spacing) * 5);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black);
      }
    }
    @media (width < 48rem) {
      margin: calc(var(--spacing) * 2);
    }
    @media (width < 48rem) {
      height: calc(var(--spacing) * 40);
    }
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * 2);
    }
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 40);
    }
    @media (width >= 64rem) {
      margin: calc(var(--spacing) * 5);
    }
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 80);
    }
  }
  .card-icon {
    font-family: "WebSymbolsRegular";
    margin-inline: auto;
    margin-top: calc(var(--spacing) * 12);
    display: block;
    height: calc(var(--spacing) * 32);
    width: 100%;
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    padding-top: calc(var(--spacing) * 5);
    text-align: center;
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 130%;
        --tw-scale-y: 130%;
        --tw-scale-z: 130%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-show-card-icon);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        font-size: var(--text-7xl);
        line-height: var(--tw-leading, var(--text-7xl--line-height));
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-azul-claro);
      }
    }
    @media (width < 48rem) {
      margin-top: calc(var(--spacing) * 3);
    }
    @media (width < 48rem) {
      height: calc(var(--spacing) * 20);
    }
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 3);
    }
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 20);
    }
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 12);
    }
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 32);
    }
  }
  .card-category {
    font-family: "TrebuchetMS";
    height: calc(var(--spacing) * 12);
    width: 100%;
    text-align: center;
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-azul-oscuro);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-show-card-category);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    @media (width < 48rem) {
      height: calc(var(--spacing) * 6);
    }
    @media (width < 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 6);
    }
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 12);
    }
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .card-description {
    font-family: "TrebuchetMS";
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-azul-oscuro);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-show-card-description);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    @media (width < 48rem) {
      display: none;
    }
    @media (width >= 48rem) {
      display: none;
    }
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 1.5);
    }
    @media (width >= 64rem) {
      display: block;
    }
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    @media (width >= 80rem) {
      margin-top: calc(var(--spacing) * 1);
    }
    @media (width >= 80rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .articles-header {
    font-family: "BebasNeue";
    background: url('../img/pxgray.png'), white;
    display: block;
    height: calc(var(--spacing) * 20);
    width: 100%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    padding-top: calc(var(--spacing) * 5);
    text-align: center;
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .article-items {
    margin: calc(var(--spacing) * 10);
    margin-inline: auto;
    height: auto;
    width: 100%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    background-color: var(--color-white);
    padding: calc(var(--spacing) * 2.5);
    color: var(--color-black);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .article-data {
    float: right;
    margin: calc(var(--spacing) * -2.5);
    height: calc(var(--spacing) * 10);
    border-bottom-left-radius: var(--radius-lg);
    background-color: var(--color-gray-800);
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
    color: var(--color-white);
  }
  .article-data span {
    margin: calc(var(--spacing) * 2.5);
  }
  .article-head {
    margin: calc(var(--spacing) * 1);
    display: block;
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .article-head a {
    font-family: font-semibol;
    color: var(--color-azul-oscuro);
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .article-description {
    margin-top: calc(var(--spacing) * 3);
    margin-bottom: calc(var(--spacing) * 3);
    display: block;
    font-family: var(--font-sans);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
}
@keyframes fromBelow {
  0% {
    transform: translateY(0%);
  }
  50% {
    transform: translateY(20%);
  }
  100% {
    transform: translateY(0%);
  }
}
@keyframes fromRigth {
  0% {
    transform: translateX(200%);
  }
  100% {
    transform: translateX(0%);
  }
}
@keyframes backBanner {
  0% {
    background-position: 0px 0px;
  }
  100% {
    background-position: -200px -200px;
  }
}
@keyframes showBannerText {
  0% {
    transform: translateX(-600%) scale(5, 5);
    opacity: 1;
  }
  50% {
    transform: translateX(600%) scale(5, 5);
    opacity: 1;
  }
  75% {
    transform: translateX(-600%) scale(5, 5);
    text-shadow: none;
    color: transparent;
    opacity: 0;
  }
  100% {
    transform: translateX(0%) scale(1, 1);
    text-shadow: 2px 2px 1px black;
    color: white;
    opacity: 1;
  }
}
@keyframes showCardIcon {
  from {
    transform: translateY(-200%);
  }
  to {
    transform: translateY(0%);
  }
}
@keyframes showCardCategory {
  from {
    transform: translateY(-300%);
  }
  to {
    transform: translateY(0%);
  }
}
@keyframes showCardDescription {
  from {
    transform: translateX(-300%);
  }
  to {
    transform: translateX(0%);
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-leading: initial;
    }
  }
}
